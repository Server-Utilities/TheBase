plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "7.1.1"
    id "net.kyori.blossom" version "1.3.1"
    id "maven-publish"
}

group = 'com.github.server-utilities'
project.version = "1.5-SNAPSHOT"

repositories {
    mavenCentral()
    jcenter()
    // JitPack
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation("org.projectlombok:lombok:1.18.24")
    shadow("org.projectlombok:lombok:1.18.24")
    annotationProcessor("org.projectlombok:lombok:1.18.24")

    implementation("com.github.simplix-softworks:simplixstorage:3.2.5")
    shadow("com.github.simplix-softworks:simplixstorage:3.2.5")

    implementation("org.pf4j:pf4j:3.8.0")
    shadow("org.pf4j:pf4j:3.8.0")

    implementation("commons-codec:commons-codec:1.15")
    shadow("commons-codec:commons-codec:1.15")

    implementation("com.google.guava:guava:30.1.1-jre")
    shadow("com.google.guava:guava:30.1.1-jre")

    implementation("com.google.code.gson:gson:2.10.1")
    shadow("com.google.code.gson:gson:2.10.1")
    
    implementation("org.mongodb:mongo-java-driver:3.12.11")
    shadow("org.mongodb:mongo-java-driver:3.12.11")
    
    implementation("mysql:mysql-connector-java:8.0.31")
    shadow("mysql:mysql-connector-java:8.0.31")
    
    implementation("org.xerial:sqlite-jdbc:3.40.0.0")
    shadow("org.xerial:sqlite-jdbc:3.40.0.0")
    
    implementation("com.zaxxer:HikariCP:4.0.3")
    shadow("com.zaxxer:HikariCP:4.0.3")
    
    implementation("net.objecthunter:exp4j:0.4.8")
    shadow("net.objecthunter:exp4j:0.4.8")

    implementation("com.google.re2j:re2j:1.7")
    shadow("com.google.re2j:re2j:1.7")
}

jar.enabled = false
shadowJar {
    relocate("de.leonhard", "tv.quaint.thebase.lib.leonhard")
    relocate("net.kyori.event", "tv.quaint.thebase.lib.eventbus")
    relocate("com.github.benmanes.caffeine", "tv.quaint.thebase.lib.caffeine")
    relocate("okio", "tv.quaint.thebase.lib.okio")
    relocate("okhttp3", "tv.quaint.thebase.lib.okhttp3")
    relocate("net.bytebuddy", "tv.quaint.thebase.lib.bytebuddy")
    relocate("me.lucko.commodore", "tv.quaint.thebase.lib.commodore")
    relocate("org.mariadb.jdbc", "tv.quaint.thebase.lib.mariadb")
    relocate("com.mysql", "tv.quaint.thebase.lib.mysql")
    relocate("org.postgresql", "tv.quaint.thebase.lib.postgresql")
    relocate("com.zaxxer.hikari", "tv.quaint.thebase.lib.hikari")
    relocate("com.mongodb", "tv.quaint.thebase.lib.mongodb")
    relocate("org.bson", "tv.quaint.thebase.lib.bson")
    relocate("redis.clients.jedis", "tv.quaint.thebase.lib.jedis")
    relocate("com.rabbitmq", "tv.quaint.thebase.lib.rabbitmq")
    relocate("org.apache.commons", "tv.quaint.thebase.lib.apache.commons")
    relocate("ninja.leaping.configurate", "tv.quaint.thebase.lib.configurate")
    relocate("org.yaml.snakeyaml", "tv.quaint.thebase.lib.yaml")
    relocate("net.objecthunter.exp4j", "tv.quaint.thebase.lib.exp4j")
    relocate("com.google.re2j", "tv.quaint.thebase.lib.re2j")
    relocate("com.google.common", "tv.quaint.thebase.lib.google.common")
    relocate("com.google.gson", "tv.quaint.thebase.lib.google.gson")
    relocate("org.pf4j", "tv.quaint.thebase.lib.pf4j")

    String finalName = "TheBase-${project.version}.jar"

    destinationDirectory = file("${rootDir}/build/libs")
    archiveClassifier.set('')

    archiveFileName = finalName;
}

artifacts {
    archives shadowJar
}

afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'com.github.server-utilities'
                artifactId = 'TheBase'
                version = project.version

                from components.java
            }
        }
    }
}